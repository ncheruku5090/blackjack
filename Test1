import java.util.*;

class Player {
    private List<Integer> hand;

    public Player() {
        hand = new ArrayList<>();
    }

    public void addCard(int card) {
        hand.add(card);
    }

    public List<Integer> getHand() {
        return hand;
    }

    public int getTotal() {
        int total = 0;
        int numAces = 0;

        for (int card : hand) {
            if (card == 1) {
                numAces++;
            }
            total += card;
        }

        while (total < 21 && numAces > 0) {
            total += 10; // Convert Ace from 1 to 11 if it benefits the player
            numAces--;
        }

        return total;
    }
}

class Dealer {
    private List<Integer> deck;
    private List<Integer> hand;

    public Dealer() {
        deck = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10));
        hand = new ArrayList<>();
        Collections.shuffle(deck);
    }

    public void dealCard(Player player) {
        int card = deck.remove(deck.size() - 1);
        player.addCard(card);
    }

    public void play() {
        while (getTotal() < 17) {
            int card = deck.remove(deck.size() - 1);
            hand.add(card);
        }
    }

    public int getTotal() {
        int total = 0;
        int numAces = 0;

        for (int card : hand) {
            if (card == 1) {
                numAces++;
            }
            total += card;
        }

        while (total < 17 && numAces > 0) {
            total += 10; // Convert Ace from 1 to 11 if it benefits the dealer
            numAces--;
        }

        return total;
    }
}

public class BlackjackGame {
    private static Scanner scanner = new Scanner(System.in);
    private static List<Player> players = new ArrayList<>();

    public static void main(String[] args) {
        createPlayers();

        Dealer dealer = new Dealer();

        for (Player player : players) {
            dealer.dealCard(player);
            dealer.dealCard(player);
            playPlayerTurn(player, dealer);
        }

        dealer.play();
        determineWinners(dealer);

        scanner.close();
    }

    private static void createPlayers() {
        System.out.print("Enter the number of players (1-3): ");
        int numPlayers = scanner.nextInt();

        for (int i = 0; i < numPlayers; i++) {
            players.add(new Player());
        }
    }

    private static void playPlayerTurn(Player player, Dealer dealer) {
        System.out.println("Player's turn: ");
        while (true) {
            System.out.print("Player's hand: ");
            displayHand(player);

            System.out.print("Do you want to (h)it or (s)tand? ");
            String choice = scanner.next();

            if (choice.equalsIgnoreCase("h")) {
                dealer.dealCard(player);
                if (player.getTotal() > 21) {
                    System.out.println("Player is busted!");
                    break;
                }
            } else if (choice.equalsIgnoreCase("s")) {
                break;
            } else {
                System.out.println("Invalid choice. Try again.");
            }
        }
    }

    private static void displayHand(Player player) {
        for (int card : player.getHand()) {
            System.out.print(card + " ");
        }
        System.out.println();
    }

    private static void determineWinners(Dealer dealer) {
        System.out.println("\nDealer's hand: ");
        displayHand(dealer);

        int dealerTotal = dealer.getTotal();
        System.out.println("Dealer's total: " + dealerTotal);

        for (Player player : players) {
            System.out.println("\nPlayer's hand: ");
            displayHand(player);

            int playerTotal = player.getTotal();
            System.out.println("Player's total: " + playerTotal);

            if (playerTotal > 21) {
                System.out.println("Player is busted. Dealer wins!");
            } else if (dealerTotal > 21) {
                System.out.println("Dealer is busted. Player wins!");
            } else if (playerTotal > dealerTotal) {
                System.out.println("Player wins!");
            } else if (playerTotal < dealerTotal) {
                System.out.println("Dealer wins!");
            } else {
                System.out.println("It's a tie!");
            }
        }
    }
}
